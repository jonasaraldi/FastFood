// <auto-generated />
using System;
using FastFood.Catalogo.Infrastructure.Persistence.Postgres.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FastFood.Catalogo.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogoDbContext))]
    [Migration("20231028172937_CriandoAgregadoDeProduto")]
    partial class CriandoAgregadoDeProduto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FastFood.Catalogo.Domain.Produtos.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Categoria");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Categoria");

                    b.ToTable("Produto", (string)null);
                });

            modelBuilder.Entity("FastFood.Catalogo.Domain.Produtos.Produto", b =>
                {
                    b.OwnsOne("FastFood.Catalogo.Domain.Produtos.ValueObjects.Dinheiro", "Preco", b1 =>
                        {
                            b1.Property<string>("ProdutoId")
                                .HasColumnType("text");

                            b1.Property<decimal>("Valor")
                                .HasColumnType("numeric")
                                .HasColumnName("Preco");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.OwnsOne("FastFood.Catalogo.Domain.Produtos.ValueObjects.Url", "UrlDaImagem", b1 =>
                        {
                            b1.Property<string>("ProdutoId")
                                .HasColumnType("text");

                            b1.Property<string>("Caminho")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("character varying(500)")
                                .HasColumnName("UrlDaImagem");

                            b1.HasKey("ProdutoId");

                            b1.ToTable("Produto");

                            b1.WithOwner()
                                .HasForeignKey("ProdutoId");
                        });

                    b.Navigation("Preco")
                        .IsRequired();

                    b.Navigation("UrlDaImagem")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
