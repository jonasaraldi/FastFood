version: '3'
services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__AtendimentoDbContext=Host=postgres;Port=5432;Database=atendimento;User Id=postgres;Password=123;
      - ConnectionStrings__CatalogoDbContext=Host=postgres;Port=5432;Database=catalogo;User Id=postgres;Password=123;
    networks:
      - internal
  postgres:
    image: postgres
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - internal
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - internal
volumes:
  postgres_data:
networks:
  internal:
    name: internal
    driver: bridge
